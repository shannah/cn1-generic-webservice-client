package com.codename1.demos.ws;


import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Button;
import com.codename1.ui.Toolbar;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ws.RESTfulWebServiceClient;
import com.codename1.ws.RESTfulWebServiceClient.Query;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class GenericWSClientDemo {

    private Form current;
    private Resources theme;
    private RESTfulWebServiceClient client;
    
    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
        client = new RESTfulWebServiceClient("http://localhost:8080/SakilaRESTServer/webresources/com.codename1.demos.sakilarestserver.customer");
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Hi World");
        hi.setLayout(new BoxLayout(BoxLayout.Y_AXIS));
        
        Button b = new Button("Get Customer 10");
        b.addActionListener(e-> {
            Query q = new Query().id("10");
            client.find(q, rowset->{
                for (Map m : rowset) {
                    System.out.println(m);
                }
                    
            });
        });
        
        Button b2 = new Button("Get first 2 customers");
        b2.addActionListener(e->{
            client.find(new Query().limit(2), rowset->{
                for (Map m : rowset) {
                    System.out.println(m);
                }
            });
        });
        
        Button b3 = new Button("Add User");
        b3.addActionListener(e->{
            RESTfulWebServiceClient userClient = new RESTfulWebServiceClient("http://localhost:8080/SakilaRESTServer/webresources/com.codename1.demos.sakilarestserver.users");
            Map m = new HashMap();
            m.put("username", "test1");
            m.put("password", "testpass1");
            m.put("email", "test1@weblite.ca");
            m.put("role", "ADMIN");
            
            userClient.create(m, res->{
                System.out.println(res);
            });
        });
        
        Button b4 = new Button("Update User");
        b4.addActionListener(e->{
            RESTfulWebServiceClient userClient = new RESTfulWebServiceClient("http://localhost:8080/SakilaRESTServer/webresources/com.codename1.demos.sakilarestserver.users");
            Map m = new HashMap();
            m.put("username", "test1");
            m.put("password", "testpass1"+System.currentTimeMillis());
            m.put("email", "test1@weblite.ca");
            m.put("role", "ADMIN");
            System.out.println("Setting values of test1 to "+m);
            
            userClient.edit("test1", m, res->{
                System.out.println(res);
            });
        });
        
        Button b5 = new Button("Delete User");
        b5.addActionListener(e->{
            RESTfulWebServiceClient userClient = new RESTfulWebServiceClient("http://localhost:8080/SakilaRESTServer/webresources/com.codename1.demos.sakilarestserver.users");
            
            userClient.delete("test1", res->{
                System.out.println(res);
            });
        });
        
        Button b6 = new Button("Count Users");
        b6.addActionListener(e->{
            RESTfulWebServiceClient userClient = new RESTfulWebServiceClient("http://localhost:8080/SakilaRESTServer/webresources/com.codename1.demos.sakilarestserver.users");
            
            userClient.count(res->{
                System.out.println(res);
            });
        });
        
        hi.add(b);
        hi.add(b2);
        hi.add(b3);
        hi.add(b4);
        hi.add(b5);
        hi.add(b6);
        hi.show();
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
